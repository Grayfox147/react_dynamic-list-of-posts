{"version":3,"sources":["components/PostsList.tsx","utils/fetchClient.ts","components/Loader/Loader.tsx","components/NewCommentForm.tsx","components/PostDetails.tsx","components/UserSelector.tsx","App.tsx","index.tsx"],"names":["PostsList","currentPostsList","setSelectedPost","useState","isPostSelected","setIsPostSelected","className","map","post","id","title","type","classNames","onClick","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","json","client","Loader","NewCommentForm","htmlFor","name","placeholder","PostDetails","selectedPost","selectedUserId","comments","setComments","commentsAreLoading","setCommentsAreLoading","useEffect","postId","length","catch","alert","finally","href","UserSelector","visibleUsers","setSelectedUserId","setPostError","isListOpen","setIsListOpen","isActive","setIsActive","current","onMouseEnter","onMouseLeave","role","user","userId","App","setVisibleUsers","setCurrentPostsList","postError","isLoading","setIsLoading","selectedPostId","setSelectedPostId","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f339e03b.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Post } from '../types/Post';\n\ntype PostlistProps = {\n  currentPostsList: Post[],\n  setSelectedPost: (postId: number) => void,\n};\n\nexport const PostsList: React.FC<PostlistProps> = ({\n  currentPostsList,\n  setSelectedPost,\n}) => {\n  const [isPostSelected, setIsPostSelected] = useState(false);\n\n  return (\n    <div data-cy=\"PostsList\">\n      <p className=\"title\">Posts:</p>\n\n      <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n        <thead>\n          <tr className=\"has-background-link-light\">\n            <th>#</th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {currentPostsList.map((post) => (\n            <tr\n              data-cy=\"Post\"\n              key={post.id}\n            >\n              <td data-cy=\"PostId\">{post.id}</td>\n\n              <td data-cy=\"PostTitle\">\n                {post.title}\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  type=\"button\"\n                  data-cy=\"PostButton\"\n                  className={classNames(\n                    'button',\n                    { 'is-link': isPostSelected },\n                    { 'is-light': !isPostSelected },\n                  )}\n                  onClick={() => {\n                    setSelectedPost(post.id);\n                    setIsPostSelected(true);\n                  }}\n                >\n                  {isPostSelected\n                    ? ('Close')\n                    : ('Open')}\n                </button>\n              </td>\n            </tr>\n          ))}\n          {/*\n          <tr data-cy=\"Post\">\n            <td data-cy=\"PostId\">18</td>\n\n            <td data-cy=\"PostTitle\">\n              voluptate et itaque vero tempora molestiae\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                type=\"button\"\n                data-cy=\"PostButton\"\n                className=\"button is-link\"\n              >\n                Close\n              </button>\n            </td>\n          </tr> */}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { CommentData } from '../types/Comment';\nimport { Post } from '../types/Post';\nimport { User } from '../types/User';\n\nconst BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n\nexport const getAllUsers = () => {\n  return client.get<User[]>('/users');\n};\n\nexport const getPostsfromUser = (userId: number) => {\n  return client.get<Post[]>(`/posts?userId=${userId}`);\n};\n\nexport const getCommentsfromPost = (postId: number) => {\n  return client.get<CommentData[]>(`/comments?postId=${postId}`);\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\n\nexport const NewCommentForm: React.FC = () => {\n  return (\n    <form data-cy=\"NewCommentForm\">\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className=\"input is-danger\"\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          <span\n            className=\"icon is-small is-right has-text-danger\"\n            data-cy=\"ErrorIcon\"\n          >\n            <i className=\"fas fa-exclamation-triangle\" />\n          </span>\n        </div>\n\n        <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n          Name is required\n        </p>\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className=\"input is-danger\"\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          <span\n            className=\"icon is-small is-right has-text-danger\"\n            data-cy=\"ErrorIcon\"\n          >\n            <i className=\"fas fa-exclamation-triangle\" />\n          </span>\n        </div>\n\n        <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n          Email is required\n        </p>\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className=\"textarea is-danger\"\n          />\n        </div>\n\n        <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n          Enter some text\n        </p>\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button type=\"submit\" className=\"button is-link is-loading\">\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button type=\"reset\" className=\"button is-link is-light\">\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","/* eslint-disable no-alert */\nimport React, { useEffect, useState } from 'react';\nimport { CommentData } from '../types/Comment';\nimport { Post } from '../types/Post';\nimport { getCommentsfromPost } from '../utils/fetchClient';\nimport { Loader } from './Loader';\nimport { NewCommentForm } from './NewCommentForm';\n\ntype PostdetailsProps = {\n  selectedPost: Post\n  selectedUserId: number,\n};\n\nexport const PostDetails: React.FC<PostdetailsProps> = ({\n  selectedPost,\n  selectedUserId,\n}) => {\n  const [comments, setComments] = useState<CommentData[]>([]);\n  const [commentsAreLoading, setCommentsAreLoading] = useState(false);\n\n  useEffect(() => {\n    setCommentsAreLoading(true);\n    getCommentsfromPost(selectedPost.id)\n      .then((data) => {\n        if (data.length > 0) {\n          setComments(data);\n        }\n      })\n      .catch(() => alert('could not load de comments'))\n      .finally(() => setCommentsAreLoading(false));\n  }, [selectedUserId]);\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {selectedPost.title}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {selectedPost.body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          {commentsAreLoading && (\n            <Loader />\n          )}\n\n          <div className=\"notification is-danger\" data-cy=\"CommentsError\">\n            Something went wrong\n          </div>\n          {!commentsAreLoading && comments.length === 0 && (\n            <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n              No comments yet\n            </p>\n          )}\n          {!commentsAreLoading && comments.length > 0 && (\n            <>\n              <p className=\"title is-4\">Comments:</p>\n\n              <article className=\"message is-small\" data-cy=\"Comment\">\n                <div className=\"message-header\">\n                  <a href=\"mailto:misha@mate.academy\" data-cy=\"CommentAuthor\">\n                    Misha Hrynko\n                  </a>\n                  <button\n                    data-cy=\"CommentDelete\"\n                    type=\"button\"\n                    className=\"delete is-small\"\n                    aria-label=\"delete\"\n                  >\n                    delete button\n                  </button>\n                </div>\n\n                <div className=\"message-body\" data-cy=\"CommentBody\">\n                  Some comment\n                </div>\n              </article>\n            </>\n          )}\n          <p className=\"title is-4\">Comments:</p>\n\n          <article className=\"message is-small\" data-cy=\"Comment\">\n            <div className=\"message-header\">\n              <a href=\"mailto:misha@mate.academy\" data-cy=\"CommentAuthor\">\n                Misha Hrynko\n              </a>\n              <button\n                data-cy=\"CommentDelete\"\n                type=\"button\"\n                className=\"delete is-small\"\n                aria-label=\"delete\"\n              >\n                delete button\n              </button>\n            </div>\n\n            <div className=\"message-body\" data-cy=\"CommentBody\">\n              Some comment\n            </div>\n          </article>\n\n          <article className=\"message is-small\" data-cy=\"Comment\">\n            <div className=\"message-header\">\n              <a\n                href=\"mailto:misha@mate.academy\"\n                data-cy=\"CommentAuthor\"\n              >\n                Misha Hrynko\n              </a>\n\n              <button\n                data-cy=\"CommentDelete\"\n                type=\"button\"\n                className=\"delete is-small\"\n                aria-label=\"delete\"\n              >\n                delete button\n              </button>\n            </div>\n            <div\n              className=\"message-body\"\n              data-cy=\"CommentBody\"\n            >\n              One more comment\n            </div>\n          </article>\n\n          <article className=\"message is-small\" data-cy=\"Comment\">\n            <div className=\"message-header\">\n              <a\n                href=\"mailto:misha@mate.academy\"\n                data-cy=\"CommentAuthor\"\n              >\n                Misha Hrynko\n              </a>\n\n              <button\n                data-cy=\"CommentDelete\"\n                type=\"button\"\n                className=\"delete is-small\"\n                aria-label=\"delete\"\n              >\n                delete button\n              </button>\n            </div>\n\n            <div className=\"message-body\" data-cy=\"CommentBody\">\n              {'Multi\\nline\\ncomment'}\n            </div>\n          </article>\n\n          <button\n            data-cy=\"WriteCommentButton\"\n            type=\"button\"\n            className=\"button is-link\"\n          >\n            Write a comment\n          </button>\n        </div>\n\n        <NewCommentForm />\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { User } from '../types/User';\n\ntype UserSelectorProps = {\n  visibleUsers: User[],\n  setSelectedUserId: (userId: number) => void,\n  setPostError: (state: boolean) => void,\n};\n\nexport const UserSelector: React.FC<UserSelectorProps> = ({\n  visibleUsers,\n  setSelectedUserId,\n  setPostError,\n}) => {\n  const [isListOpen, setIsListOpen] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  const handleUserOnclick = (userId: number) => {\n    setSelectedUserId(userId);\n    setPostError(false);\n    setIsListOpen(false);\n  };\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className={classNames(\n        'dropdown',\n        { 'is-active': isListOpen },\n      )}\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={() => {\n            setIsListOpen((current) => !current);\n          }}\n          onMouseEnter={() => {\n            setIsActive(true);\n          }}\n          onMouseLeave={() => {\n            setIsActive(false);\n          }}\n        >\n          <span>Choose a user</span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {visibleUsers.map((user) => (\n            <a\n              href={`#user-${user.id}`}\n              className={classNames(\n                'dropdown-item',\n                { 'is-active': isActive },\n              )}\n              key={user.id}\n              onClick={() => handleUserOnclick(user.id)}\n            >\n              {user.name}\n            </a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable no-alert */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { Loader } from './components/Loader';\nimport { getAllUsers, getPostsfromUser } from './utils/fetchClient';\nimport { User } from './types/User';\nimport { Post } from './types/Post';\n\nexport const App: React.FC = () => {\n  const [visibleUsers, setVisibleUsers] = useState<User[]>([]);\n  const [selectedUserId, setSelectedUserId] = useState<number>(0);\n  const [currentPostsList, setCurrentPostsList] = useState<Post[]>([]);\n  const [postError, setPostError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  const selectedPost = currentPostsList.find((post) => (\n    post.id === selectedPostId\n  ));\n\n  useEffect(() => {\n    getAllUsers()\n      .then((data) => (\n        setVisibleUsers(data)\n      ))\n      .catch(() => (\n        alert('Coult not load the Users')\n      ));\n  }, []);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPostsfromUser(selectedUserId)\n      .then((data) => (\n        setCurrentPostsList(data)\n      ))\n      .catch(() => (\n        setPostError(true)\n      ))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [selectedUserId]);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  visibleUsers={visibleUsers}\n                  setSelectedUserId={setSelectedUserId}\n                  setPostError={setPostError}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                <p data-cy=\"NoSelectedUser\">\n                  No user selected\n                </p>\n\n                {selectedUserId && isLoading && (\n                  <Loader />\n                )}\n                {selectedUserId && !isLoading && postError && (\n                  <div\n                    className=\"notification is-danger\"\n                    data-cy=\"PostsLoadingError\"\n                  >\n                    Something went wrong!\n                  </div>\n                )}\n\n                {selectedUserId\n                && !isLoading && currentPostsList.length === 0 && (\n                  <div\n                    className=\"notification is-warning\"\n                    data-cy=\"NoPostsYet\"\n                  >\n                    No posts yet\n                  </div>\n                )}\n                {selectedUserId\n                && !isLoading && currentPostsList.length > 0 && (\n                  <PostsList\n                    currentPostsList={currentPostsList}\n                    setSelectedPost={setSelectedPostId}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={classNames(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              { 'Sidebar--open': selectedPostId },\n            )}\n          >\n            {selectedPost && (\n              <div className=\"tile is-child box is-success \">\n                <PostDetails\n                  selectedPost={selectedPost}\n                  selectedUserId={selectedUserId}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}